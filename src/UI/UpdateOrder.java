/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import domain.Customer;
import domain.Order;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Queue;
import java.util.concurrent.ArrayBlockingQueue;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Liew
 */
public class UpdateOrder extends javax.swing.JInternalFrame {
    Customer customer;
    private List<Order> orderList = new ArrayList<>();
    private List<Order> OrderArray= new ArrayList<>();   
    /**
     * Creates new form UpdateOrder
     */
    public UpdateOrder() {
        initComponents();
        getCustomer();
        initiateOrderList();
        compareOrder();
        initiaTable();
    }
    
    private void getCustomer(){
        customer = new Customer("0123456789","Setapak");
    }
    
    private void initiateOrderList(){
        try {
            ObjectInputStream oiStream = new ObjectInputStream(new FileInputStream("Order.dat"));
            orderList = (ArrayList) (oiStream.readObject());
            oiStream.close();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "File not found", "ERROR", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Cannot read from file", "ERROR", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Class not found", "ERROR", JOptionPane.ERROR_MESSAGE);
            }    
    }

    private void compareOrder(){
        
        
        for(int i=0; i<orderList.size(); i++){

            Order getOrder = orderList.get(i);
            if(customer.getTelNo().equals(getOrder.getCustomerTel())) {
                if (getOrder.getStatus().equals("Pending")) {
                    OrderArray.add(getOrder);
                }
            }
        }
    }
    
    private void initiaTable(){
        DefaultTableModel model = (DefaultTableModel) jtbOrder.getModel();
        Object rowData[] = new Object[3];
        for(int i=0; i<OrderArray.size(); i++){
            rowData[0] = OrderArray.get(i).getOrderId();
            rowData[1] = OrderArray.get(i).getOrderTime();
            rowData[2] = OrderArray.get(i).getRemark();
            model.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbOrder = new javax.swing.JTable();
        jtfDescription = new javax.swing.JLabel();
        jbtUpdate = new javax.swing.JButton();

        setClosable(true);

        lblTitle.setFont(new java.awt.Font("Vivaldi", 1, 24)); // NOI18N
        lblTitle.setText("Update Order");

        jtbOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Order Time", "Remark"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbOrder.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jtbOrder);
        if (jtbOrder.getColumnModel().getColumnCount() > 0) {
            jtbOrder.getColumnModel().getColumn(2).setResizable(false);
        }

        jtfDescription.setText("Please select the order that you which to update : ");

        jbtUpdate.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jbtUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/thumb.png"))); // NOI18N
        jbtUpdate.setText("Update");
        jbtUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfDescription)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(291, 291, 291)
                        .addComponent(jbtUpdate)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtfDescription)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtUpdateActionPerformed
        int index = jtbOrder.getSelectedRow();
        Order selectedOrder = OrderArray.get(index);
        
        updateOrderDetail newUpdateOrderDetail = new updateOrderDetail(selectedOrder);
        JDesktopPane desktopPane = getDesktopPane();
        desktopPane.add(newUpdateOrderDetail);
        newUpdateOrderDetail.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jbtUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtUpdate;
    private javax.swing.JTable jtbOrder;
    private javax.swing.JLabel jtfDescription;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
}
